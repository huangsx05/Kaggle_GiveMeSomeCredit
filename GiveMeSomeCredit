import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
pd.set_option('display.max_columns', None) # 显示所有列

# 导入数据
filename = 'cs-trainingV1.csv'
dataset = pd.read_csv(filename, index_col=u'id') # index_col指明列索引，则id这一列不属于dataset的数值
c_index = dataset.columns

# 查看数据维度和类型
print("Shape of dataset: {}".format(dataset.shape))
print("\nType of data: \n{}".format(dataset.dtypes))

# 查看数据的前条
print("\nFirst 5 rows of data: \n{}".format(dataset.head(5)))

# Describe data, 同时观察异常值情况
print("\nDescription of data: \n{}".format(dataset.describe()))

# 查看数据相关性
## 协方差矩阵
print("\nCovariance Matrix: \n{}".format(dataset.corr(method = 'pearson')))
## 相关矩阵图
fig = plt.figure()
ax = fig.add_subplot(111) # 若参数349：将画布分割成3行4列，图像画在从左到右从上到下的第9块
cax = ax.matshow(dataset.corr(), vmin=-1, vmax=1, interpolation='none') # 设置color bar
fig.colorbar(cax)
ticks = np.arange(0,11,1)    # 11是列数
ax.set_xticks(ticks)         # x刻度
ax.set_yticks(ticks)         # y刻度
ax.set_xticklabels(c_index) 
ax.set_yticklabels(c_index)  
plt.show()

# 查看数据分布
'''
## 密度图
dataset.plot(kind='density', subplots=True, layout=(3,4), sharex=False, fontsize=1)
plt.show()
## 箱型图
dataset.plot(kind='box', subplots=True, layout=(3,4), sharex=False, sharey=False, fontsize=8)
plt.show()
'''
## Scatter Diagram
###pd.plotting.scatter_matrix(dataset) # 这个太疯狂了，要花很久，两两画
###plt.show()
dataset.plot.scatter(x='age',y='income') # 单独画两个属性
plt.show()



'''
## 判断缺失值情况
print("length of data: {}".format(len(dataset)))
print(dataset.describe()) 

# Monthly Income 和 NumberOfDependents 有缺失
# 考虑根据age插补
# 先把age=0的数据去掉


dataset.plot.scatter(x='age',y='MonthlyIncome')
plt.show()


age_Income = pd.read_csv("age_IncomeLessThan25.csv") 
age_Income.plot.scatter(x='age',y='MonthlyIncome')
plt.show()
'''

'''
猜测Monthly Income和Age有关系
df.plot.scatter(x='age',y='MonthlyIncome')
plt.show()
'''


'''
# 数据分布情况 - 散点图 Xi vs y
c_index = df.columns  # 每一列的索引 (变量名)
for i in c_index:
	df.plot.scatter(x=i,y='SeriousDlqin2yrs')
plt.show()
'''



'''
# 数据分布情况 - 直方图（根据需要）

df.hist('SeriousDlqin2yrs')
df.hist('RevolvingUtilizationOfUnsecuredLines',bins=100)
df.hist('age')
df.hist('NumberOfTime30-59DaysPastDueNotWorse',bins=100)
df.hist('DebtRatio',bins=100)
df.hist('MonthlyIncome',bins=100)
df.hist('NumberOfOpenCreditLinesAndLoans')
df.hist('NumberRealEstateLoansOrLines', bins=100)
df.hist('NumberOfDependents')
plt.show()
'''


'''
# Data range
c_index = df.columns[2:]

for i in c_index:
	i_max = df[i].max()
	i_min = df[i].min()
	i_range = i_max - i_min
	print(i, '--- Max: ', i_max, ', Min: ', i_min, ', Range: ', i_range)
'''


'''
print("data frame shape: {}".format(df.shape))
print("column index: \n{}".format(c_index)) #列索引名称
#print("row index: \n{}".format(df.index)) #行索引名称
#print(df[0:2]) # print前2行
#print(df.head()) # print前5行

print(df.index.shape)




X = df.iloc[:,2:]
y = df.loc[:,['SeriousDlqin2yrs']]
X_corr = X.corr()
X_cov = X.cov()
print(X_corr)
print(X_cov)

df.hist('age')
plt.show()
'''
'''
grr = pd.plotting.scatter_matrix(X, figsize=(15, 15), marker='o',
								hist_kwds={'bins': 20}, s=60, alpha=.8, cmap=mglearn.cm3)
plt.show()
'''
'''
df.plot.scatter(x='Unnamed: 0',y='RevolvingUtilizationOfUnsecuredLines')
df.plot.scatter(x='Unnamed: 0',y='age')
df.plot.scatter(x='Unnamed: 0',y='NumberOfTime30-59DaysPastDueNotWorse')
df.plot.scatter(x='Unnamed: 0',y='DebtRatio')
df.plot.scatter(x='Unnamed: 0',y='MonthlyIncome')
df.plot.scatter(x='Unnamed: 0',y='MonthlyIncome')
       'NumberOfOpenCreditLinesAndLoans', 'NumberOfTimes90DaysLate',
       'NumberRealEstateLoansOrLines', 'NumberOfTime60-89DaysPastDueNotWorse',
       'NumberOfDependents'
plt.show()
'''
